version: "3.9"

services:
  camunda-postgres:
    container_name: camunda_postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      postgres:
  camunda:
    container_name: camunda
    image: tobiaszimmer/exam-camunda-server:processUpdate-0.0.3
    ports:
      - "8080:8080"
    environment:
      DB_CONNECTION_STR: jdbc:postgresql://camunda-postgres:5432/postgres
      DB_USERNAME: postgres
      DB_POSTGRES: postgres
      CAMUNDA_ADMIN_USERNAME: demo
      CAMUNDA_ADMIN_PASSWORD: demo
      CAMUNDA_ADMIN_EMAIL: test@test.dk
      CAMUNDA_ADMIN_FIRSTNAME: admin
      CAMUNDA_ADMIN_LASTNAME: admin
    networks:
      postgres:

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      postgres:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      postgres:

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: customer
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-cph-jl360@cphbusiness.dk}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-adminview}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

networks:
  postgres:
    driver: bridge
    #external: true

volumes:
  postgres:
  pgadmin:
  zookeeper:
  kafka:
#
#services:
#  customer:
#    image: teamrocket-customer-service:1.0
#    container_name: customer-service
#    depends_on:
#      - customerdb
#    ports:
#      - "8012:8012"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://customerdb:5432/postgres
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=postgres
#      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    networks:
#      school:
#  customerdb:
#    image: postgres:13.1-alpine
#    container_name: customerdb
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#    networks:
#      mtogo:
#
#networks:
#  mtogo:
#    external: true